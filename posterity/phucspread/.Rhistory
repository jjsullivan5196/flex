setwd("C:/Users/BIT105-1/Desktop/modeldata/phucdata/")
source('D:/Ryan/New Unity Project 1/templates/plotsensor.R', echo=TRUE)
data = read.csv("joined.csv")
data = normdata(data)
View(data)
data = read.csv("joined.csv")
scale(data$V2)
View(data)
data = read.csv("joined.csv", FALSE)
data = normdata(data)
plotsensor(data[1:480])
plotsensor(data[1:480,])
normalize = function(x) {
return ((x - min(x)) / (max(x) - min(x)));
}
snorm = function(x) {
x/5.0;
}
plotsensor = function(mdata) {
matplot(y = mdata[2:5], type="l", col=c("firebrick","green", "blue", "purple"));
}
znorm <- function(ts){
ts.mean <- mean(ts)
ts.dev <- sd(ts)
(ts - ts.mean)/ts.dev
}
saveslice = function(mdata, name) {
zz = textConnection("nnl", "w");
write.table(mdata, file = zz, row.names=FALSE, col.names=FALSE, sep=",");
close(zz);
cat(paste(nnl, collapse='\n'), file = name, sep='');
}
normdata = function(x, nfunc = znorm) {
tr = as.data.frame(lapply(x[2:5], nfunc));
data.frame(V1 = x$V1, V2 = tr$V2, V3 = tr$V3, V4 = tr$V4, V5 = tr$V5);
}
munge = function(x) {
dirstring = paste(x, "-znorm", sep="");
files = sapply(list.files(x, "*.csv"), function (y) { paste(x, y, sep="/") });
tbls = lapply(files, read.csv, FALSE);
trtbls = lapply(tbls, normdata);
dir.create(dirstring);
files = sapply(list.files(x, "*.csv"), function (y) { paste(dirstring, y, sep="/") });
mapply(saveslice, trtbls, files);
}
data = read.csv("joined.csv", FALSE)
normed = normdata(data)
plotsensor(normed[1:480,])
normalize = function(x) {
return ((x - min(x)) / (max(x) - min(x)));
}
snorm = function(x) {
x/5.0;
}
plotsensor = function(mdata) {
matplot(y = mdata[2:5], type="l", col=c("firebrick","green", "blue", "purple"));
}
znorm <- function(ts){
ts.mean <- mean(ts)
ts.dev <- sd(ts)
(ts - ts.mean)/ts.dev
}
saveslice = function(mdata, name) {
zz = textConnection("nnl", "w");
write.table(mdata, file = zz, row.names=FALSE, col.names=FALSE, sep=",");
close(zz);
cat(paste(nnl, collapse='\n'), file = name, sep='');
}
normdata = function(x, nfunc = znorm) {
tr = as.data.frame(lapply(x[2:5], nfunc));
data.frame(V1 = x$V1, V2 = tr$V2, V3 = tr$V3, V4 = tr$V4, V5 = tr$V5);
}
munge = function(x) {
dirstring = paste(x, "-znorm", sep="");
files = sapply(list.files(x, "*.csv"), function (y) { paste(x, y, sep="/") });
tbls = lapply(files, read.csv, FALSE);
trtbls = lapply(tbls, normdata);
dir.create(dirstring);
files = sapply(list.files(x, "*.csv"), function (y) { paste(dirstring, y, sep="/") });
mapply(saveslice, trtbls, files);
}
normed = normdata(data)
plotsensor(normed[1:480,])
setwd("..")
pydata = read.csv("ArmSensor_s1_VAL", FALSE)
matplot(y = pydata$V2, type = "l", col = firebrick)
matplot(y = pydata$V2, type = "l", col = "firebrick")
matplot(y = pydata$V2[1:480], type = "l", col = "green")
normalize = function(x) {
return ((x - min(x)) / (max(x) - min(x)));
}
snorm = function(x) {
x/5.0;
}
plotsensor = function(mdata) {
matplot(y = mdata[2:5], type="l", col=c("firebrick","green", "blue", "purple"));
}
znorm <- function(ts){
ts.mean <- mean(ts)
ts.dev <- sd(ts)
(ts - ts.mean)/ts.dev
}
saveslice = function(mdata, name) {
zz = textConnection("nnl", "w");
write.table(mdata, file = zz, row.names=FALSE, col.names=FALSE, sep=",");
close(zz);
cat(paste(nnl, collapse='\n'), file = name, sep='');
}
normdata = function(x, nfunc = scale) {
tr = as.data.frame(lapply(x[2:5], nfunc));
data.frame(V1 = x$V1, V2 = tr$V2, V3 = tr$V3, V4 = tr$V4, V5 = tr$V5);
}
munge = function(x) {
dirstring = paste(x, "-znorm", sep="");
files = sapply(list.files(x, "*.csv"), function (y) { paste(x, y, sep="/") });
tbls = lapply(files, read.csv, FALSE);
trtbls = lapply(tbls, normdata);
dir.create(dirstring);
files = sapply(list.files(x, "*.csv"), function (y) { paste(dirstring, y, sep="/") });
mapply(saveslice, trtbls, files);
}
normalize = function(x) {
return ((x - min(x)) / (max(x) - min(x)));
}
snorm = function(x) {
x/5.0;
}
plotsensor = function(mdata) {
matplot(y = mdata[2:5], type="l", col=c("firebrick","green", "blue", "purple"));
}
znorm <- function(ts){
ts.mean <- mean(ts)
ts.dev <- sd(ts)
(ts - ts.mean)/ts.dev
}
saveslice = function(mdata, name) {
zz = textConnection("nnl", "w");
write.table(mdata, file = zz, row.names=FALSE, col.names=FALSE, sep=",");
close(zz);
cat(paste(nnl, collapse='\n'), file = name, sep='');
}
normdata = function(x, nfunc = scale) {
tr = as.data.frame(lapply(x[2:5], nfunc(center = TRUE, scale = TRUE)));
data.frame(V1 = x$V1, V2 = tr$V2, V3 = tr$V3, V4 = tr$V4, V5 = tr$V5);
}
munge = function(x) {
dirstring = paste(x, "-znorm", sep="");
files = sapply(list.files(x, "*.csv"), function (y) { paste(x, y, sep="/") });
tbls = lapply(files, read.csv, FALSE);
trtbls = lapply(tbls, normdata);
dir.create(dirstring);
files = sapply(list.files(x, "*.csv"), function (y) { paste(dirstring, y, sep="/") });
mapply(saveslice, trtbls, files);
}
tpydata = read.csv("ArmSensor_s1_TVAL", FALSE)
typnorm = normdata(tpydata)
typnorm = data.frame(V1 = tpydata$V1, V2 = scale(tpydata$V2, scale=TRUE,center=TRUE))
matplot(y = tpynorm$V2[1:480], type = "l", col = "green")
matplot(y = typnorm$V2[1:480], type = "l", col = "green")
typnorm = data.frame(V1 = tpydata$V1, V2 = scale(tpydata$V2, scale=FALSE,center=TRUE))
matplot(y = typnorm$V2[1:480], type = "l", col = "green")
typnorm = data.frame(V1 = tpydata$V1, V2 = scale(tpydata$V2, scale=TRUE,center=FALSE))
matplot(y = typnorm$V2[1:480], type = "l", col = "green")
typnorm = data.frame(V1 = tpydata$V1, V2 = znorm(tpydata$V2))
matplot(y = typnorm$V2[1:480], type = "l", col = "green")
typnorm = data.frame(V1 = tpydata$V1, V2 = scale(tpydata$V2))
matplot(y = typnorm$V2[1:480], type = "l", col = "green")
typnorm = data.frame(V1 = tpydata$V1, V2 = znorm(tpydata$V2))
matplot(y = typnorm$V2[1:480], type = "l", col = "green")
View(tpydata)
setwd("../phucspread/")
data = read.csv("joined.csv", FALSE)
plotsensor(data)
